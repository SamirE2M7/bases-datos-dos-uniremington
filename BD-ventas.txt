una empresa de ventas en línea que vende una variedad de productos.
Quieres diseñar una base de datos para gestionar los pedidos de los clientes, los productos disponibles y la información de los clientes. 
Además, implementar procedimiento almacenados.

1. Diseño de la base de datos:

ventas

2. Tabla de Clientes:

ID_Cliente (Clave primaria)
Nombre
Dirección
Correo electrónico
Tabla de Productos:

ID_Producto (Clave primaria)
Nombre
Precio
Stock
Tabla de Pedidos:

ID_Pedido (Clave primaria)
ID_Cliente (Clave externa que referencia a ID_Cliente de la tabla Clientes)
Fecha
Total
Tabla de Detalles del Pedido:

ID_Detalle (Clave primaria)
ID_Pedido (Clave externa que referencia a ID_Pedido de la tabla Pedidos)
ID_Producto (Clave externa que referencia a ID_Producto de la tabla Productos)
Cantidad
Precio_Unitario
Subtotal

-------------------------------------------------------------------------
-------------------------------------------------------------------------
-----------------------------SQL-----------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------

-- Tabla de Clientes
CREATE TABLE Clientes (
    ID_Cliente INT PRIMARY KEY,
    Nombre VARCHAR(100),
    Direccion VARCHAR(255),
    CorreoElectronico VARCHAR(100)
);

-- Tabla de Productos
CREATE TABLE Productos (
    ID_Producto INT PRIMARY KEY,
    Nombre VARCHAR(100),
    Precio DECIMAL(10, 2),
    Stock INT
);

-- Tabla de Pedidos
CREATE TABLE Pedidos (
    ID_Pedido INT PRIMARY KEY,
    ID_Cliente INT,
    Fecha DATE,
    Total DECIMAL(10, 2),
    FOREIGN KEY (ID_Cliente) REFERENCES Clientes(ID_Cliente)
);

-- Tabla de Detalles del Pedido
CREATE TABLE Detalles_Pedido (
    ID_Detalle INT PRIMARY KEY,
    ID_Pedido INT,
    ID_Producto INT,
    Cantidad INT,
    Precio_Unitario DECIMAL(10, 2),
    Subtotal DECIMAL(10, 2),
    FOREIGN KEY (ID_Pedido) REFERENCES Pedidos(ID_Pedido),
    FOREIGN KEY (ID_Producto) REFERENCES Productos(ID_Producto)
);

--------------------------------------------------------------------------------
--------------------procedimientos alamcenados----------------------------------
--------------------------------------------------------------------------------

---------------------CalcularTotalVentas------------------------------------------------------------
DELIMITER //
CREATE PROCEDURE CalcularTotalVentas(
    IN cliente_id INT,
    IN fecha_inicio DATE,
    IN fecha_fin DATE
)
BEGIN
    SELECT SUM(dp.Subtotal) AS Total_Ventas
    FROM Pedidos p
    JOIN Detalles_Pedido dp ON p.ID_Pedido = dp.ID_Pedido
    WHERE p.ID_Cliente = cliente_id
    AND p.Fecha BETWEEN fecha_inicio AND fecha_fin;
END //
DELIMITER ;

CALL CalcularTotalVentas(1, '2024-01-01', '2024-12-31');

-----------------------------------Agregar un Nuevo Cliente------------------------------------------------
DELIMITER //
CREATE PROCEDURE AgregarCliente(
    IN nombre VARCHAR(100),
    IN direccion VARCHAR(255),
    IN correoElectronico VARCHAR(100)
)
BEGIN
    INSERT INTO Clientes (Nombre, Direccion, CorreoElectronico)
    VALUES (nombre, direccion, correoElectronico);
END //
DELIMITER ;

CALL AgregarCliente('NombreCliente', 'DireccionCliente', 'correo@ejemplo.com');

-------------------------------------- Actualizar el Stock de un Producto-----------------------------------------------
DELIMITER //
CREATE PROCEDURE ActualizarStockProducto(
    IN producto_id INT,
    IN cantidad INT
)
BEGIN
    UPDATE Productos
    SET Stock = Stock - cantidad
    WHERE ID_Producto = producto_id;
END //
DELIMITER ;

CALL ActualizarStockProducto(1, 5);

--------------------------------------agregar un nuevo producto----------------------------------------
DELIMITER //
CREATE PROCEDURE AgregarProducto(
    IN nombre_producto VARCHAR(100),
    IN precio DECIMAL(10, 2),
    IN stock INT
)
BEGIN
    INSERT INTO Productos (Nombre, Precio, Stock) VALUES (nombre_producto, precio, stock);
END //
DELIMITER ;

CALL AgregarProducto('NuevoProducto', 25.99, 50);

--------------------------------------obtener detalles de un producto-----------------------------------.
DELIMITER //
CREATE PROCEDURE ObtenerDetallesPedido(
    IN pedido_id INT
)
BEGIN
    SELECT *
    FROM Detalles_Pedido
    WHERE ID_Pedido = pedido_id;
END //
DELIMITER ;

CALL ObtenerDetallesPedido(1);

































